//App.jsx.txt 
import React, { useState, useEffect } from "react";
import './App.css';

function App() {
  const [animeList, setAnimeList] = useState([]); // To store fetched anime data
  const [query, setQuery] = useState(""); // To store the search query

  // Fetch anime data from the API when the component mounts
  useEffect(() => {
    const fetchAnime = async () => {
      try {
        const response = await fetch("https://api.jikan.moe/v4/anime");
        const data = await response.json();
        setAnimeList(data.data); // Update state with fetched anime data
      } catch (error) {
        console.error("Error fetching anime data: ", error);
      }
    };
    
    fetchAnime();
  }, []); // Empty dependency array ensures this runs only once when the component mounts

  // Filter anime list based on the search query
  const filteredAnime = animeList.filter((anime) =>
    anime.title.toLowerCase().includes(query.toLowerCase())
  );

  return (
    <div className="App">
      <h1>Anime List</h1>

      {/* Input box to search anime */}
      <input
        type="text"
        id="searchBox"
        placeholder="Search Anime..."
        value={query}
        onChange={(e) => setQuery(e.target.value)} // Update query on input change
      />

      {/* Render anime list */}
      <div id="animeList" className="anime-list">
        {filteredAnime.length > 0 ? (
          filteredAnime.map((anime) => (
            <div key={anime.mal_id} className="anime-item">
              <h3>{anime.title}</h3>
              <img src={anime.images.jpg.image_url} alt={anime.title} />
            </div>
          ))
        ) : (
          <p>No anime found.</p> // Display message when no results match the query
        )}
      </div>
    </div>
  );
}

export default App;
